<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zyf.dao.UserMapper">
	<resultMap type="zyf.pojo.DO.UserDO" id="UserResultMap">
		<id property="id" column="id" jdbcType="INTEGER"/>
		<result property="phone" column="phone" jdbcType="VARCHAR"/>
		<result property="password" column="password" jdbcType="VARCHAR"/>
		<result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
		<result property="avatarUrl" column="avatar_url" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="fields">
		id, phone, password, nick_name, avatar_url
	</sql>
	
	<sql id="all_fields">
		id, phone, password, nick_name, avatar_url, create_time, update_time, is_deleted
	</sql>
	
	<sql id="fields_value">
		null, #{phone}, #{password}, #{nickName}, #{avatarUrl}
	</sql>

	<sql id="query_condition">
		<where>
			is_deleted = 0
			<if test="phone != null">
				and phone = #{phone}
			</if>
		</where>
	</sql>
	
	<sql id="update_condition">
		<set>
			<if test="nickName != null">
				nick_name = #{nickName},
			</if>
			<if test="avatarUrl != null">
				avatar_url = #{avatarUrl},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
		</set>
	</sql>

 	<insert id="insertUser" parameterType="UserDO" useGeneratedKeys="true" keyProperty="id">
 	 	insert into user (<include refid="fields" />) 
 	 	values (<include refid="fields_value" />)
	</insert>
	
	<update id="deleteUser" parameterType="long">
		update user set is_deleted = 1 where id = #{id}
	</update>
		
	<update id="updateUserById" parameterType="UserDO">
		update user <include refid="update_condition"/> where id = #{id} 
	</update>
	
  	<select id="selectUserById" parameterType="long" resultMap="UserResultMap">
    	select <include refid="fields" /> from user where is_deleted = 0 and id = #{id}
 	</select>

 	<select id="selectUserByCondition" parameterType="map" resultMap="UserResultMap">
    	select <include refid="fields" /> from user <include refid="query_condition" />
    	<if test="limit != null and offset != null">
    		limit #{offset}, #{limit}
    	</if>
 	</select>

	<select id="countUserByCondition" parameterType="map" resultType="int">
		select count(*) from user <include refid="query_condition" />
	</select>
	
	<select id="getByPhone" parameterType="string" resultMap="UserResultMap">
		select <include refid="fields" /> from user where is_deleted = 0 and phone = #{phone} 
	</select>
</mapper>